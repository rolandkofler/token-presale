Welcome to the Geth JavaScript console!

instance: Geth/v1.5.9-stable-a07539fb/linux/go1.7.3
coinbase: 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e
at block: 383 (Sun, 19 Mar 2017 14:14:53 CET)
 datadir: /home/roland/git/sikobapresale/test/testchain
 modules: admin:1.0 debug:1.0 eth:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0

> 
true
> 
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   101935.202944920000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    87799.821244320000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99799.981968280000000000 Account #4 - Presale Participant #1
undefined
> 
> 
undefined
> 
true
> 
sikobaPresaleSource=pragma solidity ^0.4.8;contract Owned { address public owner; function Owned() { owner = msg.sender; } modifier onlyOwner() { if (msg.sender != owner) { throw; } _; }}contract SikobaPresale is Owned { uint256 public totalFunding; uint256 public constant MINIMUM_PARTICIPATION_AMOUNT = 10 ether; uint256 public constant MAXIMUM_PARTICIPATION_AMOUNT = 1000 ether; uint256 public constant PRESALE_MINIMUM_FUNDING = 1500 ether; uint256 public constant PRESALE_MAXIMUM_FUNDING = 2000 ether; uint256 public constant TOTAL_PREALLOCATION = 1400 ether; uint256 public constant PRESALE_START_DATE = 1489928993; uint256 public constant PRESALE_END_DATE = 1489929893; uint256 public constant OWNER_CLAWBACK_DATE = 1489929893; mapping (address => uint256) public balanceOf; event LogParticipation(address indexed sender, uint256 value, uint256 timestamp); function SikobaPresale () payable { assertEquals(TOTAL_PREALLOCATION, msg.value); addBalance(0x0020017ba4c67f76c76b1af8c41821ee54f37171, 1000 ether); addBalance(0x0036f6addb6d64684390f55a92f0f4988266901b, 400 ether); assertEquals(TOTAL_PREALLOCATION, totalFunding); } function () payable { if (now < PRESALE_START_DATE) throw; if (now > PRESALE_END_DATE) throw; if (msg.value < MINIMUM_PARTICIPATION_AMOUNT) throw; if (msg.value > MAXIMUM_PARTICIPATION_AMOUNT) throw; if (safeIncrement(totalFunding, msg.value) > PRESALE_MAXIMUM_FUNDING) throw; addBalance(msg.sender, msg.value); } function ownerWithdraw(uint256 value) external onlyOwner { if (now <= PRESALE_END_DATE) throw; if (totalFunding < PRESALE_MINIMUM_FUNDING) throw; if (!owner.send(value)) throw; } function participantWithdrawIfMinimumFundingNotReached(uint256 value) external { if (now <= PRESALE_END_DATE) throw; if (totalFunding >= PRESALE_MINIMUM_FUNDING) throw; if (balanceOf[msg.sender] < value) throw; balanceOf[msg.sender] = safeDecrement(balanceOf[msg.sender], value); if (!msg.sender.send(value)) throw; } function ownerClawback() external onlyOwner { if (now < OWNER_CLAWBACK_DATE) throw; if (!owner.send(this.balance)) throw; } function addBalance(address participant, uint256 value) private { balanceOf[participant] = safeIncrement(balanceOf[participant], value); totalFunding = safeIncrement(totalFunding, value); LogParticipation(participant, value, now); } function assertEquals(uint256 expectedValue, uint256 actualValue) private constant { if (expectedValue != actualValue) throw; } function safeIncrement(uint256 base, uint256 increment) private constant returns (uint256) { uint256 result = base + increment; if (result < base) throw; return result; } function safeDecrement(uint256 base, uint256 increment) private constant returns (uint256) { uint256 result = base - increment; if (result > base) throw; return result; }}
undefined
> 
undefined
> 
undefined
> 
----------v sikobaPresaleCompiled v----------
undefined
> 
{
  <stdin>:Owned: {
    code: "0x60606040523415600b57fe5b5b60008054600160a060020a03191633600160a060020a03161790555b5b609e806100376000396000f300606060405263ffffffff60e060020a6000350416638da5cb5b81146020575bfe5b3415602757fe5b602d6056565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60005473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058207a143446464eec160e8cb2dd73f4b9bcb0865337d2340cfd84ac80902bbdfcbe0029",
    info: {
      abiDefinition: [{...}, {...}],
      compilerOptions: "--combined-json bin,abi,userdoc,devdoc --add-std --optimize",
      compilerVersion: "0.4.9",
      developerDoc: {
        methods: {}
      },
      language: "Solidity",
      languageVersion: "0.4.9",
      source: "pragma solidity ^0.4.8;contract Owned { address public owner; function Owned() { owner = msg.sender; } modifier onlyOwner() { if (msg.sender != owner) { throw; } _; }}contract SikobaPresale is Owned { uint256 public totalFunding; uint256 public constant MINIMUM_PARTICIPATION_AMOUNT = 10 ether; uint256 public constant MAXIMUM_PARTICIPATION_AMOUNT = 1000 ether; uint256 public constant PRESALE_MINIMUM_FUNDING = 1500 ether; uint256 public constant PRESALE_MAXIMUM_FUNDING = 2000 ether; uint256 public constant TOTAL_PREALLOCATION = 1400 ether; uint256 public constant PRESALE_START_DATE = 1489928993; uint256 public constant PRESALE_END_DATE = 1489929893; uint256 public constant OWNER_CLAWBACK_DATE = 1489929893; mapping (address => uint256) public balanceOf; event LogParticipation(address indexed sender, uint256 value, uint256 timestamp); function SikobaPresale () payable { assertEquals(TOTAL_PREALLOCATION, msg.value); addBalance(0x0020017ba4c67f76c76b1af8c41821ee54f37171, 1000 ether); addBalance(0x0036f6addb6d64684390f55a92f0f4988266901b, 400 ether); assertEquals(TOTAL_PREALLOCATION, totalFunding); } function () payable { if (now < PRESALE_START_DATE) throw; if (now > PRESALE_END_DATE) throw; if (msg.value < MINIMUM_PARTICIPATION_AMOUNT) throw; if (msg.value > MAXIMUM_PARTICIPATION_AMOUNT) throw; if (safeIncrement(totalFunding, msg.value) > PRESALE_MAXIMUM_FUNDING) throw; addBalance(msg.sender, msg.value); } function ownerWithdraw(uint256 value) external onlyOwner { if (now <= PRESALE_END_DATE) throw; if (totalFunding < PRESALE_MINIMUM_FUNDING) throw; if (!owner.send(value)) throw; } function participantWithdrawIfMinimumFundingNotReached(uint256 value) external { if (now <= PRESALE_END_DATE) throw; if (totalFunding >= PRESALE_MINIMUM_FUNDING) throw; if (balanceOf[msg.sender] < value) throw; balanceOf[msg.sender] = safeDecrement(balanceOf[msg.sender], value); if (!msg.sender.send(value)) throw; } function ownerClawback() external onlyOwner { if (now < OWNER_CLAWBACK_DATE) throw; if (!owner.send(this.balance)) throw; } function addBalance(address participant, uint256 value) private { balanceOf[participant] = safeIncrement(balanceOf[participant], value); totalFunding = safeIncrement(totalFunding, value); LogParticipation(participant, value, now); } function assertEquals(uint256 expectedValue, uint256 actualValue) private constant { if (expectedValue != actualValue) throw; } function safeIncrement(uint256 base, uint256 increment) private constant returns (uint256) { uint256 result = base + increment; if (result < base) throw; return result; } function safeDecrement(uint256 base, uint256 increment) private constant returns (uint256) { uint256 result = base - increment; if (result > base) throw; return result; }}",
      userDoc: {
        methods: {}
      }
    }
  },
  <stdin>:SikobaPresale: {
    code: "0x60606040525b5b60008054600160a060020a03191633600160a060020a03161790555b610042684be4e7267b6ae00000346401000000006105e36100d682021704565b6100757220017ba4c67f76c76b1af8c41821ee54f37171683635c9adc5dea0000064010000000061031a6100e782021704565b6100a87236f6addb6d64684390f55a92f0f4988266901b6815af1d78b58c40000064010000000061031a6100e782021704565b6100d0684be4e7267b6ae000006001546100d6640100000000026105e3176401000000009004565b5b6101b1565b8181146100e257610000565b5b5050565b600160a060020a03821660009081526002602052604090205461011790826401000000006102fd61019482021704565b600160a060020a03831660009081526002602052604090205560015461014a90826401000000006102fd61019482021704565b600155604080518281524260208201528151600160a060020a038516927f0d0c0c5120500a67dc7f367c4b7f7afc5a39488be49264d6bd4a6c7e19b245ca928290030190a25b5050565b6000828201838110156101a657610000565b8091505b5092915050565b610620806101c06000396000f300606060405236156100b45763ffffffff60e060020a6000350416632350e76281146101355780632bc402fa1461014a5780632e87edd91461016c57806333f707d11461018e578063475ec95a146101a35780635a4a04a7146101c557806361962265146101e75780636586bb251461020957806370a082311461022b5780638da5cb5b14610259578063b63e93dc14610285578063b644ee41146101c5578063f0b80000146102b9578063fe47a8a7146102db575b6101335b6358ce83214210156100c957610000565b6358ce86a54211156100da57610000565b678ac7230489e800003410156100ef57610000565b683635c9adc5dea0000034111561010557610000565b686c6b935b8bbd40000061011b600154346102fd565b111561012657610000565b610130333461031a565b5b565b005b341561013d57fe5b6101336004356103ad565b005b341561015257fe5b61015a610463565b60408051918252519081900360200190f35b341561017457fe5b61015a610470565b60408051918252519081900360200190f35b341561019657fe5b61013360043561047c565b005b34156101ab57fe5b61015a6104f7565b60408051918252519081900360200190f35b34156101cd57fe5b61015a610504565b60408051918252519081900360200190f35b34156101ef57fe5b61015a61050c565b60408051918252519081900360200190f35b341561021157fe5b61015a610519565b60408051918252519081900360200190f35b341561023357fe5b61015a600160a060020a0360043516610526565b60408051918252519081900360200190f35b341561026157fe5b610269610538565b60408051600160a060020a039092168252519081900360200190f35b341561028d57fe5b610133610547565b005b34156101cd57fe5b61015a610504565b60408051918252519081900360200190f35b34156102c157fe5b61015a6105b8565b60408051918252519081900360200190f35b34156102e357fe5b61015a6105c0565b60408051918252519081900360200190f35b60008282018381101561030f57610000565b8091505b5092915050565b600160a060020a03821660009081526002602052604090205461033d90826102fd565b600160a060020a03831660009081526002602052604090205560015461036390826102fd565b600155604080518281524260208201528151600160a060020a038516927f0d0c0c5120500a67dc7f367c4b7f7afc5a39488be49264d6bd4a6c7e19b245ca928290030190a25b5050565b6358ce86a542116103bd57610000565b600154685150ae84a8cdf0000090106103d557610000565b600160a060020a033316600090815260026020526040902054819010156103fb57610000565b600160a060020a03331660009081526002602052604090205461041e90826105c6565b600160a060020a033316600081815260026020526040808220939093559151909183156108fc02918491818181858888f19350505050151561045f57610000565b5b50565b684be4e7267b6ae0000081565b678ac7230489e8000081565b60005433600160a060020a0390811691161461049757610000565b6358ce86a542116104a757610000565b685150ae84a8cdf0000060015410156104bf57610000565b60008054604051600160a060020a039091169183156108fc02918491818181858888f19350505050151561045f57610000565b5b5b50565b685150ae84a8cdf0000081565b6358ce86a581565b686c6b935b8bbd40000081565b683635c9adc5dea0000081565b60026020526000908152604090205481565b600054600160a060020a031681565b60005433600160a060020a0390811691161461056257610000565b6358ce86a542101561057357610000565b60008054604051600160a060020a0391821692309092163180156108fc0292909190818181858888f19350505050151561013057610000565b5b5b565b6358ce86a581565b6358ce832181565b60015481565b60008183038381111561030f57610000565b8091505b5092915050565b8181146103a957610000565b5b50505600a165627a7a723058207deaf1f68df7f28b024e619130c71b19a47fee7858ab0c2f0a0eef8d4a1b50090029",
    info: {
      abiDefinition: [{...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}, {...}],
      compilerOptions: "--combined-json bin,abi,userdoc,devdoc --add-std --optimize",
      compilerVersion: "0.4.9",
      developerDoc: {
        methods: {}
      },
      language: "Solidity",
      languageVersion: "0.4.9",
      source: "pragma solidity ^0.4.8;contract Owned { address public owner; function Owned() { owner = msg.sender; } modifier onlyOwner() { if (msg.sender != owner) { throw; } _; }}contract SikobaPresale is Owned { uint256 public totalFunding; uint256 public constant MINIMUM_PARTICIPATION_AMOUNT = 10 ether; uint256 public constant MAXIMUM_PARTICIPATION_AMOUNT = 1000 ether; uint256 public constant PRESALE_MINIMUM_FUNDING = 1500 ether; uint256 public constant PRESALE_MAXIMUM_FUNDING = 2000 ether; uint256 public constant TOTAL_PREALLOCATION = 1400 ether; uint256 public constant PRESALE_START_DATE = 1489928993; uint256 public constant PRESALE_END_DATE = 1489929893; uint256 public constant OWNER_CLAWBACK_DATE = 1489929893; mapping (address => uint256) public balanceOf; event LogParticipation(address indexed sender, uint256 value, uint256 timestamp); function SikobaPresale () payable { assertEquals(TOTAL_PREALLOCATION, msg.value); addBalance(0x0020017ba4c67f76c76b1af8c41821ee54f37171, 1000 ether); addBalance(0x0036f6addb6d64684390f55a92f0f4988266901b, 400 ether); assertEquals(TOTAL_PREALLOCATION, totalFunding); } function () payable { if (now < PRESALE_START_DATE) throw; if (now > PRESALE_END_DATE) throw; if (msg.value < MINIMUM_PARTICIPATION_AMOUNT) throw; if (msg.value > MAXIMUM_PARTICIPATION_AMOUNT) throw; if (safeIncrement(totalFunding, msg.value) > PRESALE_MAXIMUM_FUNDING) throw; addBalance(msg.sender, msg.value); } function ownerWithdraw(uint256 value) external onlyOwner { if (now <= PRESALE_END_DATE) throw; if (totalFunding < PRESALE_MINIMUM_FUNDING) throw; if (!owner.send(value)) throw; } function participantWithdrawIfMinimumFundingNotReached(uint256 value) external { if (now <= PRESALE_END_DATE) throw; if (totalFunding >= PRESALE_MINIMUM_FUNDING) throw; if (balanceOf[msg.sender] < value) throw; balanceOf[msg.sender] = safeDecrement(balanceOf[msg.sender], value); if (!msg.sender.send(value)) throw; } function ownerClawback() external onlyOwner { if (now < OWNER_CLAWBACK_DATE) throw; if (!owner.send(this.balance)) throw; } function addBalance(address participant, uint256 value) private { balanceOf[participant] = safeIncrement(balanceOf[participant], value); totalFunding = safeIncrement(totalFunding, value); LogParticipation(participant, value, now); } function assertEquals(uint256 expectedValue, uint256 actualValue) private constant { if (expectedValue != actualValue) throw; } function safeIncrement(uint256 base, uint256 increment) private constant returns (uint256) { uint256 result = base + increment; if (result < base) throw; return result; } function safeDecrement(uint256 base, uint256 increment) private constant returns (uint256) { uint256 result = base - increment; if (result > base) throw; return result; }}",
      userDoc: {
        methods: {}
      }
    }
  }
}
> 
----------^ sikobaPresaleCompiled ^----------
undefined
> 
DATA: sikobaPresaleABI=[{"constant":false,"inputs":[{"name":"value","type":"uint256"}],"name":"participantWithdrawIfMinimumFundingNotReached","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"TOTAL_PREALLOCATION","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"MINIMUM_PARTICIPATION_AMOUNT","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"value","type":"uint256"}],"name":"ownerWithdraw","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"PRESALE_MINIMUM_FUNDING","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"OWNER_CLAWBACK_DATE","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"PRESALE_MAXIMUM_FUNDING","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"MAXIMUM_PARTICIPATION_AMOUNT","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"ownerClawback","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"PRESALE_END_DATE","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"PRESALE_START_DATE","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"totalFunding","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[],"payable":true,"type":"constructor"},{"payable":true,"type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"timestamp","type":"uint256"}],"name":"LogParticipation","type":"event"}]
undefined
> 
> 
undefined
> 
undefined
> 
undefined
> 
undefined
> 
... 
...... 
......... 
............ 
............ 
............ 
............ 
............ 
............ 
............ 
............ 
......... 
...... 
... 
sikobaPresaleTx=0x876ca596f87b9224428ca7ee11a24fe1f3250d26b8833697dfdf5b898e7e0658
undefined
> 
... 
undefined
> 
DATA: sikobaPresaleAddress=0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e
RESULT: sikobaPresaleAddress=0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e gas=800000 gasUsed=585090 cost=0.0117018 block=389 txId=0x876ca596f87b9224428ca7ee11a24fe1f3250d26b8833697dfdf5b898e7e0658
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   101945.214646720000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.809542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99799.981968280000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1400.000000000000000000 SikobaPresaleContract #1
undefined
> 
undefined
> 
undefined
> 
... 
... 
... 
... 
RESULT: PASS Test 2 Contract Setup
undefined
> 
> 
undefined
> 
undefined
> 
... 
undefined
> 
RESULT: sendContribution21TxId gas=100000 gasUsed=100000 cost=0.002 block=391 txId=0xea5f75b925b213ecb2b8612ecc994fcc60f54f0134e463eed1a04697e0d232fe
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   101955.216646720000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.809542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99799.979968280000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1400.000000000000000000 SikobaPresaleContract #1
undefined
> 
100000
> 
100000
> 
... 
... 
... 
... 
RESULT: PASS Test 2.1 Participant cannot contribute below minimum amount
undefined
> 
> 
undefined
> 
undefined
> 
... 
undefined
> 
RESULT: sendContribution22TxId gas=100000 gasUsed=100000 cost=0.002 block=393 txId=0xa17f05dec879f872b1daba72fc7439d1795250a1b363fb462c655544802816f5
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   101965.218646720000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.809542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99799.977968280000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1400.000000000000000000 SikobaPresaleContract #1
undefined
> 
100000
> 
100000
> 
... 
... 
... 
... 
RESULT: PASS Test 2.2 Participant cannot contribute above maximum amount
undefined
> 
> 
undefined
> 
undefined
> 
... 
undefined
> 
RESULT: sendContribution23TxId gas=100000 gasUsed=48586 cost=0.00097172 block=395 txId=0xaeacb21f037517f4fad9e5833877190537e2c1d0222451cf3bfabdf98310b85f
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   101975.219618440000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.809542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99699.976996560000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1500.000000000000000000 SikobaPresaleContract #1
undefined
> 
100000
> 
48586
> 
... 
... 
... 
... 
RESULT: PASS Test 2.3 Participant can contribute in correct range
undefined
> 
> 
undefined
> 
undefined
> 
... 
undefined
> 
RESULT: sendContribution24TxId gas=100000 gasUsed=100000 cost=0.002 block=397 txId=0x13f40e398b07830eb2d979ca74a09a566efa52b562efc9de2d14167435fe7bd2
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   101985.221618440000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.809542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99699.974996560000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1500.000000000000000000 SikobaPresaleContract #1
undefined
> 
100000
> 
100000
> 
... 
... 
... 
... 
RESULT: PASS Test 2.4 Participant cannot contribute once funding max reached
undefined
> 
> 
undefined
> 
undefined
> 
... 
undefined
> 
RESULT: withdraw25TxId gas=100000 gasUsed=100000 cost=0.002 block=399 txId=0x4b94ef325942cda36b7da58ccd1c79aa9cf5f7b53ff0ad08ac8bc27f7fcbf605
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   101995.223618440000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.807542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99699.974996560000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1500.000000000000000000 SikobaPresaleContract #1
undefined
> 
100000
> 
100000
> 
... 
... 
... 
... 
RESULT: PASS Test 2.5 Owner cannot withdraw
undefined
> 
> 
undefined
> 
undefined
> 
... 
undefined
> 
RESULT: clawback26TxId gas=100000 gasUsed=100000 cost=0.002 block=401 txId=0x344d3748811900d4ac4d4532a7d11367bac71f99793fa416dae2d0c43108c8a4
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   102005.225618440000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.805542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.993842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99699.974996560000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1500.000000000000000000 SikobaPresaleContract #1
undefined
> 
100000
> 
100000
> 
... 
... 
... 
... 
RESULT: PASS Test 2.6 Owner cannot clawback
undefined
> 
> 
undefined
> 
undefined
> 
RESULT: preallocationParticipant1Account balance=1000
undefined
> 
undefined
> 
... 
undefined
> 
RESULT: # Account                                                   EtherBalance Name
RESULT: 1 0x000d1009bd8f0b1301cc5edc28ed1222a3ce671e   102015.227618440000000000 Account #0 - Miner
RESULT: 2 0x0014060ff383c9b21c6840a3b14aab06741e5c49    86399.805542520000000000 Account #1 - Owner
RESULT: 3 0x0020017ba4c67f76c76b1af8c41821ee54f37171   101999.991842480000000000 Account #2 - Preallocation Participant #1
RESULT: 4 0x0036f6addb6d64684390f55a92f0f4988266901b   100000.000000000000000000 Account #3 - Preallocation Participant #2
RESULT: 5 0x004e64833635cd1056b948b57286b7c91e62731c    99699.974996560000000000 Account #4 - Presale Participant #1
RESULT: 6 0x7d0e6cd8214b56511ae80ca1503d93f940c8dc9e     1500.000000000000000000 SikobaPresaleContract #1
undefined
> 
RESULT: participantWithdraw27TxId gas=100000 gasUsed=100000 cost=0.002 block=403 txId=0x2a72957f40550048fe97510f75bbc37f33018debb8270bb57d0dc5c4f684e542
undefined
> 
100000
> 
100000
> 
... 
... 
... 
... 
RESULT: PASS Test 2.7 Participant cannot withdraw
undefined
> 
> 
